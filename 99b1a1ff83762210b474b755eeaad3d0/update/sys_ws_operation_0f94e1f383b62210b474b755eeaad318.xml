<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>Update Work Note</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
    var requestBody = request.body.data;

    var noteSysId = requestBody.note_sys_id;
    var incidentSysId = requestBody.incident_sys_id;
    var newWorkNote = requestBody.work_note;

    if (!noteSysId || !incidentSysId || !newWorkNote) {
        response.setStatus(400);
        response.setBody({ result: 'Missing required fields: note_sys_id, incident_sys_id, or work_note' });
        return;
    }

    // First: Validate incident exists
    var incidentGR = new GlideRecord('incident');
    if (!incidentGR.get(incidentSysId)) {
        response.setStatus(404);
        response.setBody({ result: 'Incident not found with given sys_id' });
        return;
    }

    // Then: Validate journal entry
    var journalGR = new GlideRecord('sys_journal_field');
    if (!journalGR.get(noteSysId)) {
        response.setStatus(404);
        response.setBody({ result: 'Work note not found with given note_sys_id' });
        return;
    }

    // Ensure the journal entry is actually for this incident and is a work note
    if (
        journalGR.getValue('element') !== 'work_notes' ||
        journalGR.getValue('element_id') !== incidentSysId
    ) {
        response.setStatus(400);
        response.setBody({ result: 'Journal entry is not a work note for the given incident' });
        return;
    }

    // Update the work note value
    journalGR.setValue('value', newWorkNote);
    journalGR.update();

    // Touch the incident to force UI activity stream refresh
    var originalDescription = incidentGR.getValue('description');
    incidentGR.setValue('description', originalDescription + ".");
    incidentGR.update();

    incidentGR.setValue('description', originalDescription);
    incidentGR.update();

    response.setStatus(200);
    response.setBody({
        message: 'Work note updated successfully',
        sys_id: noteSysId
    });
})(request, response);
]]></operation_script>
        <operation_uri>/api/x_1072151_zenduty/zenduty_alerts/update_work_note</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/update_work_note</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-24 12:39:55</sys_created_on>
        <sys_id>0f94e1f383b62210b474b755eeaad318</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Work Note</sys_name>
        <sys_package display_value="Zenduty" source="x_1072151_zenduty">99b1a1ff83762210b474b755eeaad3d0</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Zenduty">99b1a1ff83762210b474b755eeaad3d0</sys_scope>
        <sys_update_name>sys_ws_operation_0f94e1f383b62210b474b755eeaad318</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-24 12:39:55</sys_updated_on>
        <web_service_definition display_value="Zenduty Alerts">ecf325b383b62210b474b755eeaad362</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
